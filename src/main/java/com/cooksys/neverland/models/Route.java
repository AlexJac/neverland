package com.cooksys.neverland.models;

// Generated May 17, 2016 5:58:09 AM by Hibernate Tools 4.3.1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Route generated by hbm2java
 */
@Entity
@Table(name = "route", catalog = "neverland")
public class Route implements java.io.Serializable
{

	private Integer routeId;
	private User user;
	private boolean completed;
	private boolean canceled;
	@JsonIgnore
	private Set<Flight> flights = new HashSet<Flight>(0);

	public Route()
	{
	}

	public Route(User user, boolean completed, boolean canceled)
	{
		this.user = user;
		this.completed = completed;
		this.canceled = canceled;
	}

	public Route(User user, boolean completed, boolean canceled,
			Set<Flight> flights)
	{
		this.user = user;
		this.completed = completed;
		this.canceled = canceled;
		this.flights = flights;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "route_id", unique = true, nullable = false)
	public Integer getRouteId()
	{
		return this.routeId;
	}

	public void setRouteId(Integer routeId)
	{
		this.routeId = routeId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public User getUser()
	{
		return this.user;
	}

	public void setUser(User user)
	{
		this.user = user;
	}

	@Column(name = "completed", nullable = false)
	public boolean isCompleted()
	{
		return this.completed;
	}

	public void setCompleted(boolean completed)
	{
		this.completed = completed;
	}

	@Column(name = "canceled", nullable = false)
	public boolean isCanceled()
	{
		return this.canceled;
	}

	public void setCanceled(boolean canceled)
	{
		this.canceled = canceled;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "route_flight", catalog = "neverland", joinColumns = { @JoinColumn(name = "route_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "flight_id", nullable = false, updatable = false) })
	public Set<Flight> getFlights()
	{
		return this.flights;
	}

	public void setFlights(Set<Flight> flights)
	{
		this.flights = flights;
	}

}
